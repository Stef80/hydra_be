package net.agm.hydra.model;
// Generated 19-mar-2021 16.54.53 by Hibernate Tools 5.2.12.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import net.agm.hydra.datamodel.Activation;
import net.agm.hydra.model.base.BaseEntity;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", uniqueConstraints = @UniqueConstraint(columnNames = "email"))
public class Users extends BaseEntity {

	private Long id;
	private License license;
	private String email;
	private String name;
	private String surname;
	private String password;
	private String workplace;
	private String expertiseArea;
	private Activation actived;
	private Set<Roles> roleses = new HashSet<Roles>(0);
	private Set<Books> bookses = new HashSet<Books>(0);
	private Set<Assigned> assigneds = new HashSet<Assigned>(0);

	public Users() {
	}

	public Users(String email, String password, String workplace, Activation actived) {
		this.email = email;
		this.password = password;
		this.workplace = workplace;
		this.actived = actived;
	}

	public Users(License license, String email, String name, String surname, String password, String workplace,
			String expertiseArea, Activation actived, Set<Roles> roleses, Set<Books> bookses, Set<Assigned> assigneds) {
		this.license = license;
		this.email = email;
		this.name = name;
		this.surname = surname;
		this.password = password;
		this.workplace = workplace;
		this.expertiseArea = expertiseArea;
		this.actived = actived;
		this.roleses = roleses;
		this.bookses = bookses;
		this.assigneds = assigneds;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tenant_id")
	public License getLicense() {
		return this.license;
	}

	public void setLicense(License license) {
		this.license = license;
	}

	@Column(name = "email", unique = true, nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "surname")
	public String getSurname() {
		return this.surname;
	}

	public void setSurname(String surname) {
		this.surname = surname;
	}

	@Column(name = "password", nullable = false)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "workplace", nullable = false)
	public String getWorkplace() {
		return this.workplace;
	}

	public void setWorkplace(String workplace) {
		this.workplace = workplace;
	}

	@Column(name = "expertise_area")
	public String getExpertiseArea() {
		return this.expertiseArea;
	}

	public void setExpertiseArea(String expertiseArea) {
		this.expertiseArea = expertiseArea;
	}

	@Column(name = "actived", nullable = false, length = 19)
	@Enumerated(EnumType.STRING)
	public Activation getActived() {
		return this.actived;
	}

	public void setActived(Activation actived) {
		this.actived = actived;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Roles> getRoleses() {
		return this.roleses;
	}

	public void setRoleses(Set<Roles> roleses) {
		this.roleses = roleses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Books> getBookses() {
		return this.bookses;
	}

	public void setBookses(Set<Books> bookses) {
		this.bookses = bookses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Assigned> getAssigneds() {
		return this.assigneds;
	}

	public void setAssigneds(Set<Assigned> assigneds) {
		this.assigneds = assigneds;
	}

}
